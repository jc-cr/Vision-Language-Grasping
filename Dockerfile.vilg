# Base image
FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu18.04 AS base

ENV DEBIAN_FRONTEND=noninteractive
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"
ENV SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
ENV CUDA_HOME="/usr/local/cuda"
ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6+PTX"
ENV FORCE_CUDA=1

RUN apt-get update && apt-get install -y \
    python3.8 \
    python3-pip \
    python3.8-dev \
    git \
    wget \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    x11-apps \
    cmake \
    libffi-dev \
    gcc \
    libjpeg-dev \
    zlib1g-dev \
    libpng-dev \
    libtiff5-dev \
    libfreetype6-dev \
    libwebp-dev \
    ninja-build \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1

RUN pip3 install --upgrade pip
RUN pip3 install --no-cache-dir wheel setuptools

# Builder stage for Python packages
FROM base AS builder

WORKDIR /app

# Copy the entire project
COPY . .

# Copy the pre-compiled requirements
COPY output/consolidated_requirements.txt .

# Install pre-compiled requirements
RUN pip3 install -r consolidated_requirements.txt

# Install main project
RUN pip3 install -e .

# Final stage
FROM builder AS final

# Copy the installed packages and project files from the builder stage
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app

WORKDIR /app